package wikipedia;

import org.junit.jupiter.api.*;
import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.*;
import io.github.bonigarcia.wdm.WebDriverManager;
import java.util.*;
import java.util.stream.*;

public class SearchTest {
    private WebDriver driver;

    // Page Object для главной страницы
    public static class MainPage {
        @FindBy(id = "searchInput") private WebElement searchField;
        @FindBy(css = "button[type='submit']") private WebElement searchButton;
        @FindBy(css = ".suggestions-results a") private List<WebElement> suggestions;
        @FindBy(css = ".searchdidyoumean a") private WebElement searchHint;

        public MainPage(WebDriver driver) {
            PageFactory.initElements(driver, this);
        }

        public void search(String query) {
            searchField.clear();
            searchField.sendKeys(query);
        }

        public void clickSearch() {
            searchButton.click();
        }

        public void clickFirstSuggestion() {
            if (!suggestions.isEmpty()) suggestions.get(0).click();
        }

        public void clickSearchHint() {
            searchHint.click();
        }

        public List<String> getSuggestionsText() {
            return suggestions.stream()
                    .map(WebElement::getText)
                    .collect(Collectors.toList());
        }
    }

    @BeforeAll
    public static void setupAll() {
        WebDriverManager.chromedriver().setup(); // Автозагрузка ChromeDriver
    }

    @BeforeEach
    public void setup() {
        driver = new ChromeDriver();
        driver.manage().window().maximize();
        driver.get("https://ru.wikipedia.org");
    }

    @Test
    @DisplayName("Проверка, что саджесты начинаются с поискового запроса")
    void testSuggestionsStartWithQuery() {
        MainPage page = new MainPage(driver);
        page.search("Java");
        List<String> suggests = page.getSuggestionsText();
        Assertions.assertTrue(suggests.get(0).startsWith("Java"),
                "Первый саджест должен начинаться с поискового запроса");
    }

    @Test
    @DisplayName("Проверка перехода по саджесту")
    void testSuggestionRedirect() {
        MainPage page = new MainPage(driver);
        page.search("Selenium");
        page.clickFirstSuggestion();
        Assertions.assertTrue(driver.getCurrentUrl().contains("Selenium"),
                "Должен быть переход на страницу саджеста");
    }

    @AfterEach
    public void tearDown() {
        if (driver != null) {
            driver.quit();
        }
    }
}

<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.wiki.tests</groupId>
    <artifactId>wiki-search-tests</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <junit.version>5.9.3</junit.version>
        <selenium.version>4.10.0</selenium.version>
    </properties>

    <dependencies>
        <!-- Selenium -->
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>${selenium.version}</version>
        </dependency>

        <!-- JUnit 5 -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- WebDriver Manager -->
        <dependency>
            <groupId>io.github.bonigarcia</groupId>
            <artifactId>webdrivermanager</artifactId>
            <version>5.4.1</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
            </plugin>
        </plugins>
    </build>
</project>